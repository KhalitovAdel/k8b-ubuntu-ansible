# ansible-playbook docker.yml -i hosts

- name: Manage docker servers
  hosts: dockerhosts
  remote_user: root

  tasks:
  - name: Basic tools
    apt: 
      name: ['rsync', 'dnsutils', 'vim', 'unattended-upgrades']
      update_cache: true
      state: present 

  - name: Setup unattended-upgrades (part 1)
    copy:
      content: ""
      dest: /etc/apt/apt.conf.d/20auto-upgrades 
      force: no
      group: root
      owner: root
      mode: 0644

  - name: Setup unattended-upgrades (part 2)
    lineinfile:
      dest: /etc/apt/apt.conf.d/20auto-upgrades
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: 'APT::Periodic::Update-Package-Lists', line: 'APT::Periodic::Update-Package-Lists "1";' }
      - { regexp: 'APT::Periodic::Unattended-Upgrade', line: 'APT::Periodic::Unattended-Upgrade "1";' }

  - name: Setup the best editor 
    alternatives:
      name: editor
      path: /usr/bin/vim.basic

  - name: Setup vim (part 1)
    copy:
      content: ""
      dest: /root/.vimrc
      force: no
      group: root
      owner: root
      mode: 0600

  - name: Setup vim (part 2)
    lineinfile:
      dest: /root/.vimrc
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: '^syntax', line: 'syntax on' }
      - { regexp: '^set showmatch', line: 'set showmatch' }
      - { regexp: '^set number', line: 'set number' }
      - { regexp: '^set mouse', line: 'set mouse=""' }

  - name: Disable password based root SSH access
    lineinfile: dest=/etc/ssh/sshd_config
                regexp="^PermitRootLogin"
                line="PermitRootLogin without-password"
                state=present
    notify: Restart ssh


  - name: Install required tools for Docker
    apt: 
      name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common']
      update_cache: true
      state: present 

  - name: Docker apt key 
    apt_key:
      url: https://download.docker.com/linux/debian/gpg 
      state: present

  - name: Add Docker repository.
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
      state: present
      update_cache: true

  - name: Install Docker
    apt: 
      name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
      update_cache: true
      state: present 

  - name: Prune old docker images cron 
    cron:
      name: Prune old docker images
      minute: "1"
      hour: "4"
      user: root
      job: "docker system prune -af --filter 'until=48h' > /dev/null 2>&1"
      cron_file: ansible_docker-prune

#  - name: Prune old docker images
#    shell: docker system prune -af --filter 'until=48h'

  - name: Download docker compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.25.0/docker-compose-Linux-x86_64 
      dest: /usr/local/bin/docker-compose 
      mode: '0755'

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
