  - name: Install postgres development tools
    apt: 
      name: ['git', 'build-essential', 'cmake', 'valgrind', 'clang-format', 'systemd-coredump', 'strace', 'coccinelle', 'libssl-dev', 'libxml2-dev', 'bison', 'flex', 'libipc-run-perl', 'systemtap-sdt-dev', 'libreadline-dev', 'zlib1g-dev', 'libdbi-perl']
      update_cache: true
      state: present

  - name: Allow the debugger to connect to processes of the same user
    ansible.posix.sysctl:
      name: kernel.yama.ptrace_scope
      value: '0'
      state: present

  - name: Make sure 'wheel' group exists
    group:
       name: wheel
       state: present

  - name: Allow 'wheel' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: Add work worker
    ansible.builtin.user:
      name: '{{ username }}'
      shell: /bin/bash
      state: present
      createhome: yes
      groups: wheel
      append: yes

  - name: Copy vim config
    ansible.builtin.copy:
      remote_src: yes
      src: /root/.vimrc
      dest: '/home/{{ username }}/.vimrc'
      owner: '{{ username }}'
      group: '{{ username }}'

  - name: Create ssh dir for work user
    ansible.builtin.file:
      path: '/home/{{ username }}/.ssh'
      state: directory
      mode: '0755'
      owner: '{{ username }}'
      group: '{{ username }}'

  - name: Copy ssh key
    ansible.builtin.copy:
      remote_src: yes
      src: /root/.ssh/authorized_keys
      dest: '/home/{{ username }}/.ssh/authorized_keys'
      owner: '{{ username }}'
      group: '{{ username }}'
      mode: '0600'

  - name: Checkout TimescaleDB
    git:
     repo: https://github.com/timescale/timescaledb.git
     dest: /home/{{ username }}/timescaledb
     update: no
     version: main
 
  - name: Update owner of TimescaleDB
    ansible.builtin.file:
      path: "/home/{{username}}/timescaledb"
      state: directory
      recurse: yes
      owner: '{{ username }}'
      group: '{{ username }}'

# Needed for clang-format-14
  - name: Install LLVM apt key
    apt_key:
      url: https://apt.llvm.org/llvm-snapshot.gpg.key
      state: present

  - name: Add LLVM-14 repository
    apt_repository:
      repo: "deb http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-14 main"
      state: present
      update_cache: true

  - name: Install clang-format-14
    apt: 
      name: ['clang-format-14']
      update_cache: true
      state: present
      
